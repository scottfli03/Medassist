<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="OrderTestDataSet" targetNamespace="http://tempuri.org/OrderTestDataSet.xsd" xmlns:mstns="http://tempuri.org/OrderTestDataSet.xsd" xmlns="http://tempuri.org/OrderTestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="cs6232_g5ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="cs6232_g5ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MedAssist.Properties.Settings.GlobalReference.Default.cs6232_g5ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrdersTableAdapter" GeneratorDataComponentClassName="OrdersTableAdapter" Name="Orders" UserDataComponentName="OrdersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT OrderID, OrderDate, DatePerformed, Result, o.TestID, t.TestName, o.VisitID, v.VisitDate, (p.LastName + ', ' + p.FirstName) AS Patient FROM dbo.Orders o JOIN Tests t ON o.TestID = t.TestID
JOIN Visits v ON v.VisitID = o.VisitID
JOIN Patients p ON v.PatientID = p.PatientID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OrderID" DataSetColumn="OrderID" />
              <Mapping SourceColumn="OrderDate" DataSetColumn="OrderDate" />
              <Mapping SourceColumn="DatePerformed" DataSetColumn="DatePerformed" />
              <Mapping SourceColumn="Result" DataSetColumn="Result" />
              <Mapping SourceColumn="TestID" DataSetColumn="TestID" />
              <Mapping SourceColumn="VisitID" DataSetColumn="VisitID" />
              <Mapping SourceColumn="TestName" DataSetColumn="TestName" />
              <Mapping SourceColumn="VisitDate" DataSetColumn="VisitDate" />
              <Mapping SourceColumn="Patient" DataSetColumn="Patient" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByPatientID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByPatientID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByPatientID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT OrderID, OrderDate, DatePerformed, Result, o.TestID, t.TestName, o.VisitID, v.VisitDate FROM dbo.Orders o JOIN Tests t ON o.TestID = t.TestID
JOIN Visits v ON v.VisitID = o.VisitID
Where v.PatientID = @patientID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="patientID" ColumnName="PatientID" DataSourceName="[cs6232-g5].dbo.Visits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PatientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByPatientIDandVisitDate" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByPatientIDandVisitDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillByPatientIDandVisitDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OrderID, OrderDate, DatePerformed, Result, o.TestID, t.TestName, o.VisitID, v.VisitDate, (p.LastName + ', ' + p.FirstName) AS Patient FROM dbo.Orders o JOIN Tests t ON o.TestID = t.TestID
JOIN Visits v ON v.VisitID = o.VisitID
JOIN Patients p ON v.PatientID = p.PatientID
Where v.PatientID = @patientID AND
v.VisitDate = @visitDate</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="patientID" ColumnName="PatientID" DataSourceName="[cs6232-g5].dbo.Visits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PatientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="visitDate" ColumnName="VisitDate" DataSourceName="[cs6232-g5].dbo.Visits" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@visitDate" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="VisitDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestsTableAdapter" GeneratorDataComponentClassName="TestsTableAdapter" Name="Tests" UserDataComponentName="TestsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectName="[cs6232-g5].dbo.Tests" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tests] WHERE (([TestID] = @Original_TestID) AND ([TestName] = @Original_TestName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tests] ([TestID], [TestName]) VALUES (@TestID, @TestName);
SELECT TestID, TestName FROM Tests WHERE (TestID = @TestID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TestID, TestName FROM dbo.Tests</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tests] SET [TestID] = @TestID, [TestName] = @TestName WHERE (([TestID] = @Original_TestID) AND ([TestName] = @Original_TestName));
SELECT TestID, TestName FROM Tests WHERE (TestID = @TestID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TestID" DataSetColumn="TestID" />
              <Mapping SourceColumn="TestName" DataSetColumn="TestName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectName="[cs6232-g5].dbo.Tests" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByTests" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByTests" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByTests">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TestID, TestName FROM dbo.Tests</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VisitsTableAdapter" GeneratorDataComponentClassName="VisitsTableAdapter" Name="Visits" UserDataComponentName="VisitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectName="[cs6232-g5].dbo.Visits" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Visits] WHERE (([VisitID] = @Original_VisitID) AND ([VisitDate] = @Original_VisitDate) AND ([PatientID] = @Original_PatientID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VisitID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VisitID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_VisitDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="VisitDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT VisitID, VisitDate, PatientID FROM Visits</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Visits] SET [VisitDate] = @VisitDate, [PatientID] = @PatientID WHERE (([VisitID] = @Original_VisitID) AND ([VisitDate] = @Original_VisitDate) AND ([PatientID] = @Original_PatientID));
SELECT VisitID, VisitDate, PatientID FROM Visits WHERE (VisitID = @VisitID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@VisitDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="VisitDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PatientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VisitID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VisitID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_VisitDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="VisitDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="VisitID" ColumnName="VisitID" DataSourceName="[cs6232-g5].dbo.Visits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VisitID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="VisitID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VisitID" DataSetColumn="VisitID" />
              <Mapping SourceColumn="VisitDate" DataSetColumn="VisitDate" />
              <Mapping SourceColumn="PatientID" DataSetColumn="PatientID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientsTableAdapter" GeneratorDataComponentClassName="PatientsTableAdapter" Name="Patients" UserDataComponentName="PatientsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cs6232_g5ConnectionString (Settings)" DbObjectName="[cs6232-g5].dbo.Patients" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Patients] WHERE (([PatientID] = @Original_PatientID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT PatientID, (FirstName + ' ' + LastName) AS FullName FROM dbo.Patients</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PatientID" DataSetColumn="PatientID" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="OrderTestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="OrderTestDataSet" msprop:Generator_UserDSName="OrderTestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Orders" msprop:Generator_TableClassName="OrdersDataTable" msprop:Generator_TableVarName="tableOrders" msprop:Generator_TablePropName="Orders" msprop:Generator_RowDeletingName="OrdersRowDeleting" msprop:Generator_RowChangingName="OrdersRowChanging" msprop:Generator_RowEvHandlerName="OrdersRowChangeEventHandler" msprop:Generator_RowDeletedName="OrdersRowDeleted" msprop:Generator_UserTableName="Orders" msprop:Generator_RowChangedName="OrdersRowChanged" msprop:Generator_RowEvArgName="OrdersRowChangeEvent" msprop:Generator_RowClassName="OrdersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OrderID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnOrderID" msprop:Generator_ColumnPropNameInRow="OrderID" msprop:Generator_ColumnPropNameInTable="OrderIDColumn" msprop:Generator_UserColumnName="OrderID" type="xs:int" />
              <xs:element name="OrderDate" msprop:Generator_ColumnVarNameInTable="columnOrderDate" msprop:Generator_ColumnPropNameInRow="OrderDate" msprop:Generator_ColumnPropNameInTable="OrderDateColumn" msprop:Generator_UserColumnName="OrderDate" type="xs:dateTime" />
              <xs:element name="DatePerformed" msprop:Generator_ColumnVarNameInTable="columnDatePerformed" msprop:Generator_ColumnPropNameInRow="DatePerformed" msprop:Generator_ColumnPropNameInTable="DatePerformedColumn" msprop:Generator_UserColumnName="DatePerformed" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Result" msprop:Generator_ColumnVarNameInTable="columnResult" msprop:Generator_ColumnPropNameInRow="Result" msprop:Generator_ColumnPropNameInTable="ResultColumn" msprop:Generator_UserColumnName="Result" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TestID" msprop:Generator_ColumnVarNameInTable="columnTestID" msprop:Generator_ColumnPropNameInRow="TestID" msprop:Generator_ColumnPropNameInTable="TestIDColumn" msprop:Generator_UserColumnName="TestID" type="xs:int" />
              <xs:element name="VisitID" msprop:Generator_ColumnVarNameInTable="columnVisitID" msprop:Generator_ColumnPropNameInRow="VisitID" msprop:Generator_ColumnPropNameInTable="VisitIDColumn" msprop:Generator_UserColumnName="VisitID" type="xs:int" />
              <xs:element name="TestName" msprop:Generator_ColumnVarNameInTable="columnTestName" msprop:Generator_ColumnPropNameInRow="TestName" msprop:Generator_ColumnPropNameInTable="TestNameColumn" msprop:Generator_UserColumnName="TestName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="VisitDate" msprop:Generator_ColumnVarNameInTable="columnVisitDate" msprop:Generator_ColumnPropNameInRow="VisitDate" msprop:Generator_ColumnPropNameInTable="VisitDateColumn" msprop:Generator_UserColumnName="VisitDate" type="xs:dateTime" />
              <xs:element name="Patient" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnPatient" msprop:Generator_ColumnPropNameInRow="Patient" msprop:Generator_ColumnPropNameInTable="PatientColumn" msprop:Generator_UserColumnName="Patient" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="102" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tests" msprop:Generator_TableClassName="TestsDataTable" msprop:Generator_TableVarName="tableTests" msprop:Generator_TablePropName="Tests" msprop:Generator_RowDeletingName="TestsRowDeleting" msprop:Generator_RowChangingName="TestsRowChanging" msprop:Generator_RowEvHandlerName="TestsRowChangeEventHandler" msprop:Generator_RowDeletedName="TestsRowDeleted" msprop:Generator_UserTableName="Tests" msprop:Generator_RowChangedName="TestsRowChanged" msprop:Generator_RowEvArgName="TestsRowChangeEvent" msprop:Generator_RowClassName="TestsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TestID" msprop:Generator_ColumnVarNameInTable="columnTestID" msprop:Generator_ColumnPropNameInRow="TestID" msprop:Generator_ColumnPropNameInTable="TestIDColumn" msprop:Generator_UserColumnName="TestID" type="xs:int" />
              <xs:element name="TestName" msprop:Generator_ColumnVarNameInTable="columnTestName" msprop:Generator_ColumnPropNameInRow="TestName" msprop:Generator_ColumnPropNameInTable="TestNameColumn" msprop:Generator_UserColumnName="TestName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Visits" msprop:Generator_TableClassName="VisitsDataTable" msprop:Generator_TableVarName="tableVisits" msprop:Generator_TablePropName="Visits" msprop:Generator_RowDeletingName="VisitsRowDeleting" msprop:Generator_RowChangingName="VisitsRowChanging" msprop:Generator_RowEvHandlerName="VisitsRowChangeEventHandler" msprop:Generator_RowDeletedName="VisitsRowDeleted" msprop:Generator_UserTableName="Visits" msprop:Generator_RowChangedName="VisitsRowChanged" msprop:Generator_RowEvArgName="VisitsRowChangeEvent" msprop:Generator_RowClassName="VisitsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VisitID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnVisitID" msprop:Generator_ColumnPropNameInRow="VisitID" msprop:Generator_ColumnPropNameInTable="VisitIDColumn" msprop:Generator_UserColumnName="VisitID" type="xs:int" />
              <xs:element name="VisitDate" msprop:Generator_ColumnVarNameInTable="columnVisitDate" msprop:Generator_ColumnPropNameInRow="VisitDate" msprop:Generator_ColumnPropNameInTable="VisitDateColumn" msprop:Generator_UserColumnName="VisitDate" type="xs:dateTime" />
              <xs:element name="PatientID" msprop:Generator_ColumnVarNameInTable="columnPatientID" msprop:Generator_ColumnPropNameInRow="PatientID" msprop:Generator_ColumnPropNameInTable="PatientIDColumn" msprop:Generator_UserColumnName="PatientID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Patients" msprop:Generator_TableClassName="PatientsDataTable" msprop:Generator_TableVarName="tablePatients" msprop:Generator_RowChangedName="PatientsRowChanged" msprop:Generator_TablePropName="Patients" msprop:Generator_RowDeletingName="PatientsRowDeleting" msprop:Generator_RowChangingName="PatientsRowChanging" msprop:Generator_RowEvHandlerName="PatientsRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientsRowDeleted" msprop:Generator_RowClassName="PatientsRow" msprop:Generator_UserTableName="Patients" msprop:Generator_RowEvArgName="PatientsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PatientID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnPatientID" msprop:Generator_ColumnPropNameInRow="PatientID" msprop:Generator_ColumnPropNameInTable="PatientIDColumn" msprop:Generator_UserColumnName="PatientID" type="xs:int" />
              <xs:element name="FullName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="101" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Orders" />
      <xs:field xpath="mstns:OrderID" />
      <xs:field xpath="mstns:TestID" />
      <xs:field xpath="mstns:VisitID" />
    </xs:unique>
    <xs:unique name="Tests_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tests" />
      <xs:field xpath="mstns:TestID" />
    </xs:unique>
    <xs:unique name="Visits_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Visits" />
      <xs:field xpath="mstns:VisitID" />
    </xs:unique>
    <xs:unique name="Patients_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Patients" />
      <xs:field xpath="mstns:PatientID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Orders_Tests" msdata:parent="Tests" msdata:child="Orders" msdata:parentkey="TestID" msdata:childkey="TestID" msprop:Generator_UserChildTable="Orders" msprop:Generator_ChildPropName="GetOrdersRows" msprop:Generator_UserRelationName="FK_Orders_Tests" msprop:Generator_RelationVarName="relationFK_Orders_Tests" msprop:Generator_UserParentTable="Tests" msprop:Generator_ParentPropName="TestsRow" />
      <msdata:Relationship name="FK_Orders_Visits" msdata:parent="Visits" msdata:child="Orders" msdata:parentkey="VisitID" msdata:childkey="VisitID" msprop:Generator_UserChildTable="Orders" msprop:Generator_ChildPropName="GetOrdersRows" msprop:Generator_UserRelationName="FK_Orders_Visits" msprop:Generator_RelationVarName="relationFK_Orders_Visits" msprop:Generator_UserParentTable="Visits" msprop:Generator_ParentPropName="VisitsRow" />
      <msdata:Relationship name="FK_Visits_Patients" msdata:parent="Patients" msdata:child="Visits" msdata:parentkey="PatientID" msdata:childkey="PatientID" msprop:Generator_UserChildTable="Visits" msprop:Generator_ChildPropName="GetVisitsRows" msprop:Generator_UserRelationName="FK_Visits_Patients" msprop:Generator_ParentPropName="PatientsRow" msprop:Generator_RelationVarName="relationFK_Visits_Patients" msprop:Generator_UserParentTable="Patients" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>